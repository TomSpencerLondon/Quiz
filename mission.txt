# Mission/Goals

## Current Feature

1. Add Saving for Session
    [âœ…] Stop Long references: use Id objects for Identifiers e.g. ResponseId, QuestionId, ChoiceId, SessionId objects (can use Record - example MobReg etc.)
    [âœ…] Edit class diagram further
    [ðŸš§] From test taker response ensure submission questionId selected + choice selected id (AskQuestionForm) - delete local identifiers for choice
    [ðŸš§] QuizController questionResponse - quizSession.respondWith(askQuestionForm.getSelectedChoices())
        - respondWith in QuizSession relies on order of choices
        - add Ids to the choices and replace localIds with Ids from choices
        - Set<Long> choiceIds to Response
        - Need unique identifiers for choice
        - Could have different join table: response_choices (question_id, choice_id, response_id)
            => get rid of direct relationship between Response and Question?
        - For our purposes - domain model is good - we have reference to questionId for what choice belongs to (primary concern)
        - Primary concerns
            - Session + Response = one aggregate
            - Question + Choice = different aggregate
        - Mapping from object model to data model - may need improvement
    [âœ…] Create Transformer class for QuizSession -> QuizSessionDbo
    [âœ…] Add saving for Session in database


## Other Feature Options
2. Edit / Delete Questions
3. Add Chapter Categories for Questions

# Questions
- Is ChoiceType Interface correct naming and implementers (e.g. MultipleChoice / SingleChoice)?
Should it be Answer?
